module shifter (
    input a[16],                     
    input b[16],
    input alufn[6],
    output sho[16]              //sho:shift output
  ) {
  
  multiply mul;                //use multiply
  
  always {
    mul.a = a[7:0];           //put in inputs for multiply
    mul.b = b[7:0];
    case(alufn[1:0]){       
      b00:                   //alufn 00, shift left
        sho = a << b[3:0];
        
      b01:                  //alufn 01, shift right
        sho = a >> b[3:0];
        
      b11:                 //alufn 11, shift right while keeping the sign bit
        sho = $signed(a)>>>b[3:0];
        
      b10:
        sho = mul.mult;    //no b10, use it for output
      default:
        sho = a;
    }
  }
}
